{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","todosList","App","useState","setTodo","titleName","setTitleName","selectedUserId","setSelectedUserID","hasTitleError","setTitleError","hasUserError","setUserError","idForNewTodo","Math","max","action","method","onSubmit","event","preventDefault","trim","length","newTodo","currentTodo","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30248d53.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport className from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        className(\n          'TodoInfo',\n          {\n            'TodoInfo--completed': completed,\n          },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUserById = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todosList: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App : React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>(todosList);\n  const [titleName, setTitleName] = useState('');\n  const [selectedUserId, setSelectedUserID] = useState(0);\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n\n  const idForNewTodo = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const handleTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitleName(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserID(+event.target.value);\n    setUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitleName('');\n    setSelectedUserID(0);\n  };\n\n  const handleFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(titleName.trim().length === 0);\n    setUserError(!selectedUserId);\n\n    const newTodo: Todo = {\n      id: idForNewTodo,\n      title: titleName,\n      userId: selectedUserId,\n      user: getUserById(selectedUserId),\n      completed: false,\n    };\n\n    if (titleName.trim().length !== 0 && selectedUserId) {\n      setTodo(currentTodo => [...currentTodo, newTodo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              value={titleName}\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              onChange={handleTitle}\n            />\n          </label>\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}